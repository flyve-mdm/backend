<div class="plugin_flyvemdm_clear">
   <div id="plugin_flyvemdm_geolocationList">
      {% if beginDate is not empty and endDate is not empty %}
         <div><label for="fromDateRange">From date:</label> <span id="fromDateRange"></span>
         <input type="hidden" id="showdate{{ randBegin }}" value="{{ beginDate|date('Y-m-d H:i:s',timezone)}}"/></div>
         <div><label for="toDateRange">To date:</label> <span id="toDateRange"></span>
         <input type="hidden" id="showdate{{ randEnd }}" value="{{ endDate|date('Y-m-d H:i:s',timezone)}}"/></div>
         <div id="slider-range"></div>
      {% endif %}
   </div>
   <div id="plugin_flyvemdm_geolocationMap">
   </div>
   <script  type="text/javascript">$(function() {
      var map;
      var markers = [];
      var randBegin = '{{ randBegin }}';
      var randEnd = '{{ randEnd }}';

      function showMap(position) {
         map = L.map('plugin_flyvemdm_geolocationMap');
         map.on('locationfound', onLocationFound);
         map.on('locationerror', onLocationError);
         L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
            maxZoom: 20
          }).addTo(map);
         map.locate({"setview": true, "timeout": 1000});
      }

      function onLocationFound(e) {
          map.setView(e.latlng, 13);
      }

      function onLocationError(e) {
          // See the Eiffel tower
          map.setView(L.latLng(48.8583701, 2.2922926), 13);
      }

      function loadMarkers() {
         var computerId = {{ computerId|raw }};
         var beginDate = $('#showdate'  + randBegin)[0].value;
         var endDate = $('#showdate' + randEnd)[0].value;
         $.ajax({
            url: '../ajax/geolocation.php',
            data: {"computers_id": computerId, "beginDate": beginDate, "endDate": endDate},
            dataType: 'json',
            success: function(data) {
                markers.forEach(function(element) {
                   element.remove();
                });
                delete marker;
                markers = [];
                $.each(data, function(index, element) {
                    if (isNaN(parseFloat(element.latitude)) || isNaN(parseFloat(element.longitude))) {
                       // not a valid geolocation
                    } else {
                       marker = L.marker([element.latitude, element.longitude], {'title': element.date});
                       markers.push(marker);
                       marker.addTo(map);
                    }
                 });
                if (typeof(marker) !== 'undefined') {
                   map.setView(marker.getLatLng(), 13)
                }
              }
         })
      }

      function initSlider(){
          var sliderRange = $("#slider-range");
          var minDate = new Date("{{ beginDate|date('Y-m-d H:i:s',timezone) }}").getTime() / 1000;
          var maxDate = new Date("{{ endDate|date('Y-m-d H:i:s',timezone) }}").getTime() / 1000;
          sliderRange.slider({
              range: true,
              min: minDate,
              max: maxDate,
              step: 86400,
              values: [minDate, maxDate],
              slide: function (event, ui) {
                  var fromDate = new Date(ui.values[0] * 1000);
                  var toDate = new Date(ui.values[1] * 1000);
                  $('#fromDateRange').html(fromDate.toDateString());
                  $('#showdate'  + randBegin).val(fromDate.toISOString());
                  $('#toDateRange').html(toDate.toDateString());
                  $('#showdate' + randEnd).val(toDate.toISOString());
                  loadMarkers();
              }
          });
          var fromDate = new Date(sliderRange.slider("values", 0) * 1000);
          var toDate = new Date(sliderRange.slider("values", 1) * 1000);
          $('#fromDateRange').html(fromDate.toDateString());
          $('#showdate'  + randBegin).val(fromDate.toISOString());
          $('#toDateRange').html(toDate.toDateString());
          $('#showdate' + randEnd).val(toDate.toISOString());
          loadMarkers();
      }

      initSlider();
      showMap();
   })
   </script>
</div>